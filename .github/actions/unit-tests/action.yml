name: "Run Tests"

inputs:
  python-version:
    description: "Python version to use"
    required: true
  os:
    description: "Operating system to run tests on"
    required: true
  is_pr:
    description: "Is this a pull request?"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"
        cache-dependency-path: "requirements.txt"
    - name: Install dependencies
      shell: bash
      run: |
        pip install --upgrade pdm
        pdm install
        pdm add pytest-cov pytest-html pytest-xdist pytest-ruff
    - name: Run tests
      shell: bash
      run: |
        pdm run pytest -n auto --cov=src/didindy --cov-report=xml --cov-report=html --cov-report=term-missing 2>&1 | tee pytest_output.log
        PYTEST_EXIT_CODE=${PIPESTATUS[0]}
        if grep -Eq "RuntimeWarning: coroutine '.*' was never awaited" pytest_output.log; then
          echo "Warning: Unawaited coroutine detected in tests."
          exit 1
        fi
        exit $PYTEST_EXIT_CODE
    - name: Save PR number to file
      if: ${{ inputs.is_pr == 'true' }}
      shell: bash
      run: echo "${{ github.event.number }}" > PR_NUMBER
    - name: Archive PR number
      if: ${{ inputs.is_pr == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: PR_NUMBER
        path: PR_NUMBER
    - name: Archive test results
      uses: actions/upload-artifact@v4
      with:
        name: TEST_COV
        path: test-reports/coverage.xml